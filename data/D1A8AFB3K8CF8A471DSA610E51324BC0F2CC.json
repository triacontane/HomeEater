{
    "uid": "D1A8AFB3K8CF8A471DSA610E51324BC0F2CC",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Component_FieldAnimation",
        "type": "game_script",
        "order": 5,
        "content": "# ===================================================================\n#\n#   Script: Component_FieldAnimation\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\n\n###*\n* Different methods of field-animation.\n*\n* @module gs\n* @class AnimationLoopType\n* @memberof gs\n* @static\n* @final\n###\nclass FieldAnimationMethod\n    @initialize: ->\n        ###*\n        * Set the value calculated by the easing-logic.\n        * @property SET\n        * @static\n        * @final\n        ###\n        @SET = 0\n        \n        ###*\n        * Adds the value calculated by the easing-logic.\n        * @property ADD\n        * @static\n        * @final\n        ###\n        @ADD = 1\n    \nFieldAnimationMethod.initialize()\ngs.FieldAnimationMethod = FieldAnimationMethod\n\nclass Component_FieldAnimation extends gs.Component_Animation\n    ###*\n    * Executes a field-animation. A field-animation animates a certain\n    * property of the game-object as long as it is a number-property.\n    *\n    * @module gs\n    * @class Component_FieldAnimation\n    * @extends gs.Component_Animation\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: (data) ->\n        super\n        \n        ###*\n        * The field to animate as property-path.\n        * @property field\n        * @type string\n        ###\n        @field = data?.field\n        \n        ###*\n        * The animation-method.\n        * @property method\n        * @type gs.FieldAnimationMethod\n        * @default gs.FieldAnimationMethod.SET\n        ###\n        @method = data?.method\n        \n        ###*\n        * The easing-object used for the animation.\n        * @property easing\n        * @type gs.Easing\n        ###\n        @easing = new gs.Easing(null, data?.easing)\n        \n    ###*\n    * Serializes the path-animation into a data-bundle.\n    *\n    * @method toDataBundle\n    ###\n    toDataBundle: ->\n        easing: @easing,\n        method: @method,\n        field: @field\n     \n     \n    ###*\n    * Updates the field-animation.\n    *\n    * @method update\n    ###   \n    update: ->\n        super\n        if not @easing.isRunning then return\n        \n        @easing.updateValue()\n        value = ui.Component_BindingHandler.resolveFieldPath(@object, @field)\n        \n        if !@method # Set\n            value.set(@object, @easing.value)\n        else        # Add\n            value.set(@object, value.get(@object) + @easing.value)\n            \n        if not @easing.isRunning\n            @callback?(@object, this)\n     \n    ###*\n    * Starts the field-animation.\n    *\n    * @method start\n    * @param {number} Value The target value.\n    * @param {string} field The name of the field/property.\n    * @param {number} duration The duration in frames.\n    * @param {Object} easingType The easing-type.\n    * @param {function} [callback] An optional callback called if blending is finished. \n    ###   \n    start: (value, field, duration, easingType, callback) ->\n        @callback = callback\n        @field = field\n        @easing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN]\n        \n        if duration == 0 or @isInstantSkip()\n            valueField = ui.Component_BindingHandler.resolveFieldPath(@object, @field)\n            valueField.set(@object, value)\n            @callback?(@object, this)\n        else\n            startValue = ui.Component_BindingHandler.fieldValue(@object, field)\n            @easing.startValue(startValue, value - startValue, duration)\n        \ngs.Component_FieldAnimation = Component_FieldAnimation",
        "parentId": "A8E9945CKEE5CA4855SAC81E480CB8098E0E",
        "folder": false,
        "compiledContent": "\n/**\n* Different methods of field-animation.\n*\n* @module gs\n* @class AnimationLoopType\n* @memberof gs\n* @static\n* @final\n */\nvar Component_FieldAnimation, FieldAnimationMethod,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nFieldAnimationMethod = (function() {\n  function FieldAnimationMethod() {}\n\n  FieldAnimationMethod.initialize = function() {\n\n    /**\n    * Set the value calculated by the easing-logic.\n    * @property SET\n    * @static\n    * @final\n     */\n    this.SET = 0;\n\n    /**\n    * Adds the value calculated by the easing-logic.\n    * @property ADD\n    * @static\n    * @final\n     */\n    return this.ADD = 1;\n  };\n\n  return FieldAnimationMethod;\n\n})();\n\nFieldAnimationMethod.initialize();\n\ngs.FieldAnimationMethod = FieldAnimationMethod;\n\nComponent_FieldAnimation = (function(superClass) {\n  extend(Component_FieldAnimation, superClass);\n\n\n  /**\n  * Executes a field-animation. A field-animation animates a certain\n  * property of the game-object as long as it is a number-property.\n  *\n  * @module gs\n  * @class Component_FieldAnimation\n  * @extends gs.Component_Animation\n  * @memberof gs\n  * @constructor\n   */\n\n  function Component_FieldAnimation(data) {\n    Component_FieldAnimation.__super__.constructor.apply(this, arguments);\n\n    /**\n    * The field to animate as property-path.\n    * @property field\n    * @type string\n     */\n    this.field = data != null ? data.field : void 0;\n\n    /**\n    * The animation-method.\n    * @property method\n    * @type gs.FieldAnimationMethod\n    * @default gs.FieldAnimationMethod.SET\n     */\n    this.method = data != null ? data.method : void 0;\n\n    /**\n    * The easing-object used for the animation.\n    * @property easing\n    * @type gs.Easing\n     */\n    this.easing = new gs.Easing(null, data != null ? data.easing : void 0);\n  }\n\n\n  /**\n  * Serializes the path-animation into a data-bundle.\n  *\n  * @method toDataBundle\n   */\n\n  Component_FieldAnimation.prototype.toDataBundle = function() {\n    return {\n      easing: this.easing,\n      method: this.method,\n      field: this.field\n    };\n  };\n\n\n  /**\n  * Updates the field-animation.\n  *\n  * @method update\n   */\n\n  Component_FieldAnimation.prototype.update = function() {\n    var value;\n    Component_FieldAnimation.__super__.update.apply(this, arguments);\n    if (!this.easing.isRunning) {\n      return;\n    }\n    this.easing.updateValue();\n    value = ui.Component_BindingHandler.resolveFieldPath(this.object, this.field);\n    if (!this.method) {\n      value.set(this.object, this.easing.value);\n    } else {\n      value.set(this.object, value.get(this.object) + this.easing.value);\n    }\n    if (!this.easing.isRunning) {\n      return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n    }\n  };\n\n\n  /**\n  * Starts the field-animation.\n  *\n  * @method start\n  * @param {number} Value The target value.\n  * @param {string} field The name of the field/property.\n  * @param {number} duration The duration in frames.\n  * @param {Object} easingType The easing-type.\n  * @param {function} [callback] An optional callback called if blending is finished.\n   */\n\n  Component_FieldAnimation.prototype.start = function(value, field, duration, easingType, callback) {\n    var startValue, valueField;\n    this.callback = callback;\n    this.field = field;\n    this.easing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN];\n    if (duration === 0 || this.isInstantSkip()) {\n      valueField = ui.Component_BindingHandler.resolveFieldPath(this.object, this.field);\n      valueField.set(this.object, value);\n      return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n    } else {\n      startValue = ui.Component_BindingHandler.fieldValue(this.object, field);\n      return this.easing.startValue(startValue, value - startValue, duration);\n    }\n  };\n\n  return Component_FieldAnimation;\n\n})(gs.Component_Animation);\n\ngs.Component_FieldAnimation = Component_FieldAnimation;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFRQTs7Ozs7Ozs7O0FBQUEsSUFBQSw4Q0FBQTtFQUFBOzs7QUFTTTs7O0VBQ0Ysb0JBQUMsQ0FBQSxVQUFELEdBQWEsU0FBQTs7QUFDVDs7Ozs7O0lBTUEsSUFBQyxDQUFBLEdBQUQsR0FBTzs7QUFFUDs7Ozs7O1dBTUEsSUFBQyxDQUFBLEdBQUQsR0FBTztFQWZFOzs7Ozs7QUFpQmpCLG9CQUFvQixDQUFDLFVBQXJCLENBQUE7O0FBQ0EsRUFBRSxDQUFDLG9CQUFILEdBQTBCOztBQUVwQjs7OztBQUNGOzs7Ozs7Ozs7OztFQVVhLGtDQUFDLElBQUQ7SUFDVCwyREFBQSxTQUFBOztBQUVBOzs7OztJQUtBLElBQUMsQ0FBQSxLQUFELGtCQUFTLElBQUksQ0FBRTs7QUFFZjs7Ozs7O0lBTUEsSUFBQyxDQUFBLE1BQUQsa0JBQVUsSUFBSSxDQUFFOztBQUVoQjs7Ozs7SUFLQSxJQUFDLENBQUEsTUFBRCxHQUFjLElBQUEsRUFBRSxDQUFDLE1BQUgsQ0FBVSxJQUFWLGlCQUFnQixJQUFJLENBQUUsZUFBdEI7RUF2Qkw7OztBQXlCYjs7Ozs7O3FDQUtBLFlBQUEsR0FBYyxTQUFBO1dBQ1Y7TUFBQSxNQUFBLEVBQVEsSUFBQyxDQUFBLE1BQVQ7TUFDQSxNQUFBLEVBQVEsSUFBQyxDQUFBLE1BRFQ7TUFFQSxLQUFBLEVBQU8sSUFBQyxDQUFBLEtBRlI7O0VBRFU7OztBQU1kOzs7Ozs7cUNBS0EsTUFBQSxHQUFRLFNBQUE7QUFDSixRQUFBO0lBQUEsc0RBQUEsU0FBQTtJQUNBLElBQUcsQ0FBSSxJQUFDLENBQUEsTUFBTSxDQUFDLFNBQWY7QUFBOEIsYUFBOUI7O0lBRUEsSUFBQyxDQUFBLE1BQU0sQ0FBQyxXQUFSLENBQUE7SUFDQSxLQUFBLEdBQVEsRUFBRSxDQUFDLHdCQUF3QixDQUFDLGdCQUE1QixDQUE2QyxJQUFDLENBQUEsTUFBOUMsRUFBc0QsSUFBQyxDQUFBLEtBQXZEO0lBRVIsSUFBRyxDQUFDLElBQUMsQ0FBQSxNQUFMO01BQ0ksS0FBSyxDQUFDLEdBQU4sQ0FBVSxJQUFDLENBQUEsTUFBWCxFQUFtQixJQUFDLENBQUEsTUFBTSxDQUFDLEtBQTNCLEVBREo7S0FBQSxNQUFBO01BR0ksS0FBSyxDQUFDLEdBQU4sQ0FBVSxJQUFDLENBQUEsTUFBWCxFQUFtQixLQUFLLENBQUMsR0FBTixDQUFVLElBQUMsQ0FBQSxNQUFYLENBQUEsR0FBcUIsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFoRCxFQUhKOztJQUtBLElBQUcsQ0FBSSxJQUFDLENBQUEsTUFBTSxDQUFDLFNBQWY7bURBQ0ksSUFBQyxDQUFBLFNBQVUsSUFBQyxDQUFBLFFBQVEsZUFEeEI7O0VBWkk7OztBQWVSOzs7Ozs7Ozs7OztxQ0FVQSxLQUFBLEdBQU8sU0FBQyxLQUFELEVBQVEsS0FBUixFQUFlLFFBQWYsRUFBeUIsVUFBekIsRUFBcUMsUUFBckM7QUFDSCxRQUFBO0lBQUEsSUFBQyxDQUFBLFFBQUQsR0FBWTtJQUNaLElBQUMsQ0FBQSxLQUFELEdBQVM7SUFDVCxJQUFDLENBQUEsTUFBTSxDQUFDLElBQVIsR0FBZSxVQUFBLElBQWMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxXQUFZLENBQUEsRUFBRSxDQUFDLFdBQVcsQ0FBQyxPQUFmO0lBRXBELElBQUcsUUFBQSxLQUFZLENBQVosSUFBaUIsSUFBQyxDQUFBLGFBQUQsQ0FBQSxDQUFwQjtNQUNJLFVBQUEsR0FBYSxFQUFFLENBQUMsd0JBQXdCLENBQUMsZ0JBQTVCLENBQTZDLElBQUMsQ0FBQSxNQUE5QyxFQUFzRCxJQUFDLENBQUEsS0FBdkQ7TUFDYixVQUFVLENBQUMsR0FBWCxDQUFlLElBQUMsQ0FBQSxNQUFoQixFQUF3QixLQUF4QjttREFDQSxJQUFDLENBQUEsU0FBVSxJQUFDLENBQUEsUUFBUSxlQUh4QjtLQUFBLE1BQUE7TUFLSSxVQUFBLEdBQWEsRUFBRSxDQUFDLHdCQUF3QixDQUFDLFVBQTVCLENBQXVDLElBQUMsQ0FBQSxNQUF4QyxFQUFnRCxLQUFoRDthQUNiLElBQUMsQ0FBQSxNQUFNLENBQUMsVUFBUixDQUFtQixVQUFuQixFQUErQixLQUFBLEdBQVEsVUFBdkMsRUFBbUQsUUFBbkQsRUFOSjs7RUFMRzs7OztHQTdFNEIsRUFBRSxDQUFDOztBQTBGMUMsRUFBRSxDQUFDLHdCQUFILEdBQThCIiwic291cmNlc0NvbnRlbnQiOlsiIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4jXG4jICAgU2NyaXB0OiBDb21wb25lbnRfRmllbGRBbmltYXRpb25cbiNcbiMgICAkJENPUFlSSUdIVCQkXG4jXG4jID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuIyMjKlxuKiBEaWZmZXJlbnQgbWV0aG9kcyBvZiBmaWVsZC1hbmltYXRpb24uXG4qXG4qIEBtb2R1bGUgZ3NcbiogQGNsYXNzIEFuaW1hdGlvbkxvb3BUeXBlXG4qIEBtZW1iZXJvZiBnc1xuKiBAc3RhdGljXG4qIEBmaW5hbFxuIyMjXG5jbGFzcyBGaWVsZEFuaW1hdGlvbk1ldGhvZFxuICAgIEBpbml0aWFsaXplOiAtPlxuICAgICAgICAjIyMqXG4gICAgICAgICogU2V0IHRoZSB2YWx1ZSBjYWxjdWxhdGVkIGJ5IHRoZSBlYXNpbmctbG9naWMuXG4gICAgICAgICogQHByb3BlcnR5IFNFVFxuICAgICAgICAqIEBzdGF0aWNcbiAgICAgICAgKiBAZmluYWxcbiAgICAgICAgIyMjXG4gICAgICAgIEBTRVQgPSAwXG4gICAgICAgIFxuICAgICAgICAjIyMqXG4gICAgICAgICogQWRkcyB0aGUgdmFsdWUgY2FsY3VsYXRlZCBieSB0aGUgZWFzaW5nLWxvZ2ljLlxuICAgICAgICAqIEBwcm9wZXJ0eSBBRERcbiAgICAgICAgKiBAc3RhdGljXG4gICAgICAgICogQGZpbmFsXG4gICAgICAgICMjI1xuICAgICAgICBAQUREID0gMVxuICAgIFxuRmllbGRBbmltYXRpb25NZXRob2QuaW5pdGlhbGl6ZSgpXG5ncy5GaWVsZEFuaW1hdGlvbk1ldGhvZCA9IEZpZWxkQW5pbWF0aW9uTWV0aG9kXG5cbmNsYXNzIENvbXBvbmVudF9GaWVsZEFuaW1hdGlvbiBleHRlbmRzIGdzLkNvbXBvbmVudF9BbmltYXRpb25cbiAgICAjIyMqXG4gICAgKiBFeGVjdXRlcyBhIGZpZWxkLWFuaW1hdGlvbi4gQSBmaWVsZC1hbmltYXRpb24gYW5pbWF0ZXMgYSBjZXJ0YWluXG4gICAgKiBwcm9wZXJ0eSBvZiB0aGUgZ2FtZS1vYmplY3QgYXMgbG9uZyBhcyBpdCBpcyBhIG51bWJlci1wcm9wZXJ0eS5cbiAgICAqXG4gICAgKiBAbW9kdWxlIGdzXG4gICAgKiBAY2xhc3MgQ29tcG9uZW50X0ZpZWxkQW5pbWF0aW9uXG4gICAgKiBAZXh0ZW5kcyBncy5Db21wb25lbnRfQW5pbWF0aW9uXG4gICAgKiBAbWVtYmVyb2YgZ3NcbiAgICAqIEBjb25zdHJ1Y3RvclxuICAgICMjI1xuICAgIGNvbnN0cnVjdG9yOiAoZGF0YSkgLT5cbiAgICAgICAgc3VwZXJcbiAgICAgICAgXG4gICAgICAgICMjIypcbiAgICAgICAgKiBUaGUgZmllbGQgdG8gYW5pbWF0ZSBhcyBwcm9wZXJ0eS1wYXRoLlxuICAgICAgICAqIEBwcm9wZXJ0eSBmaWVsZFxuICAgICAgICAqIEB0eXBlIHN0cmluZ1xuICAgICAgICAjIyNcbiAgICAgICAgQGZpZWxkID0gZGF0YT8uZmllbGRcbiAgICAgICAgXG4gICAgICAgICMjIypcbiAgICAgICAgKiBUaGUgYW5pbWF0aW9uLW1ldGhvZC5cbiAgICAgICAgKiBAcHJvcGVydHkgbWV0aG9kXG4gICAgICAgICogQHR5cGUgZ3MuRmllbGRBbmltYXRpb25NZXRob2RcbiAgICAgICAgKiBAZGVmYXVsdCBncy5GaWVsZEFuaW1hdGlvbk1ldGhvZC5TRVRcbiAgICAgICAgIyMjXG4gICAgICAgIEBtZXRob2QgPSBkYXRhPy5tZXRob2RcbiAgICAgICAgXG4gICAgICAgICMjIypcbiAgICAgICAgKiBUaGUgZWFzaW5nLW9iamVjdCB1c2VkIGZvciB0aGUgYW5pbWF0aW9uLlxuICAgICAgICAqIEBwcm9wZXJ0eSBlYXNpbmdcbiAgICAgICAgKiBAdHlwZSBncy5FYXNpbmdcbiAgICAgICAgIyMjXG4gICAgICAgIEBlYXNpbmcgPSBuZXcgZ3MuRWFzaW5nKG51bGwsIGRhdGE/LmVhc2luZylcbiAgICAgICAgXG4gICAgIyMjKlxuICAgICogU2VyaWFsaXplcyB0aGUgcGF0aC1hbmltYXRpb24gaW50byBhIGRhdGEtYnVuZGxlLlxuICAgICpcbiAgICAqIEBtZXRob2QgdG9EYXRhQnVuZGxlXG4gICAgIyMjXG4gICAgdG9EYXRhQnVuZGxlOiAtPlxuICAgICAgICBlYXNpbmc6IEBlYXNpbmcsXG4gICAgICAgIG1ldGhvZDogQG1ldGhvZCxcbiAgICAgICAgZmllbGQ6IEBmaWVsZFxuICAgICBcbiAgICAgXG4gICAgIyMjKlxuICAgICogVXBkYXRlcyB0aGUgZmllbGQtYW5pbWF0aW9uLlxuICAgICpcbiAgICAqIEBtZXRob2QgdXBkYXRlXG4gICAgIyMjICAgXG4gICAgdXBkYXRlOiAtPlxuICAgICAgICBzdXBlclxuICAgICAgICBpZiBub3QgQGVhc2luZy5pc1J1bm5pbmcgdGhlbiByZXR1cm5cbiAgICAgICAgXG4gICAgICAgIEBlYXNpbmcudXBkYXRlVmFsdWUoKVxuICAgICAgICB2YWx1ZSA9IHVpLkNvbXBvbmVudF9CaW5kaW5nSGFuZGxlci5yZXNvbHZlRmllbGRQYXRoKEBvYmplY3QsIEBmaWVsZClcbiAgICAgICAgXG4gICAgICAgIGlmICFAbWV0aG9kICMgU2V0XG4gICAgICAgICAgICB2YWx1ZS5zZXQoQG9iamVjdCwgQGVhc2luZy52YWx1ZSlcbiAgICAgICAgZWxzZSAgICAgICAgIyBBZGRcbiAgICAgICAgICAgIHZhbHVlLnNldChAb2JqZWN0LCB2YWx1ZS5nZXQoQG9iamVjdCkgKyBAZWFzaW5nLnZhbHVlKVxuICAgICAgICAgICAgXG4gICAgICAgIGlmIG5vdCBAZWFzaW5nLmlzUnVubmluZ1xuICAgICAgICAgICAgQGNhbGxiYWNrPyhAb2JqZWN0LCB0aGlzKVxuICAgICBcbiAgICAjIyMqXG4gICAgKiBTdGFydHMgdGhlIGZpZWxkLWFuaW1hdGlvbi5cbiAgICAqXG4gICAgKiBAbWV0aG9kIHN0YXJ0XG4gICAgKiBAcGFyYW0ge251bWJlcn0gVmFsdWUgVGhlIHRhcmdldCB2YWx1ZS5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBmaWVsZCBUaGUgbmFtZSBvZiB0aGUgZmllbGQvcHJvcGVydHkuXG4gICAgKiBAcGFyYW0ge251bWJlcn0gZHVyYXRpb24gVGhlIGR1cmF0aW9uIGluIGZyYW1lcy5cbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBlYXNpbmdUeXBlIFRoZSBlYXNpbmctdHlwZS5cbiAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IFtjYWxsYmFja10gQW4gb3B0aW9uYWwgY2FsbGJhY2sgY2FsbGVkIGlmIGJsZW5kaW5nIGlzIGZpbmlzaGVkLiBcbiAgICAjIyMgICBcbiAgICBzdGFydDogKHZhbHVlLCBmaWVsZCwgZHVyYXRpb24sIGVhc2luZ1R5cGUsIGNhbGxiYWNrKSAtPlxuICAgICAgICBAY2FsbGJhY2sgPSBjYWxsYmFja1xuICAgICAgICBAZmllbGQgPSBmaWVsZFxuICAgICAgICBAZWFzaW5nLnR5cGUgPSBlYXNpbmdUeXBlIHx8IGdzLkVhc2luZ3MuRUFTRV9MSU5FQVJbZ3MuRWFzaW5nVHlwZXMuRUFTRV9JTl1cbiAgICAgICAgXG4gICAgICAgIGlmIGR1cmF0aW9uID09IDAgb3IgQGlzSW5zdGFudFNraXAoKVxuICAgICAgICAgICAgdmFsdWVGaWVsZCA9IHVpLkNvbXBvbmVudF9CaW5kaW5nSGFuZGxlci5yZXNvbHZlRmllbGRQYXRoKEBvYmplY3QsIEBmaWVsZClcbiAgICAgICAgICAgIHZhbHVlRmllbGQuc2V0KEBvYmplY3QsIHZhbHVlKVxuICAgICAgICAgICAgQGNhbGxiYWNrPyhAb2JqZWN0LCB0aGlzKVxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBzdGFydFZhbHVlID0gdWkuQ29tcG9uZW50X0JpbmRpbmdIYW5kbGVyLmZpZWxkVmFsdWUoQG9iamVjdCwgZmllbGQpXG4gICAgICAgICAgICBAZWFzaW5nLnN0YXJ0VmFsdWUoc3RhcnRWYWx1ZSwgdmFsdWUgLSBzdGFydFZhbHVlLCBkdXJhdGlvbilcbiAgICAgICAgXG5ncy5Db21wb25lbnRfRmllbGRBbmltYXRpb24gPSBDb21wb25lbnRfRmllbGRBbmltYXRpb24iXX0=\n//# sourceURL=Component_FieldAnimation_66.js"
    },
    "summary": [
        "name",
        "type",
        "order"
    ]
}