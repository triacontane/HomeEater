{
    "uid": "37BD01A5KBA1BA4238S876AE816A837C1419",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Object_Scene",
        "type": "game_script",
        "order": 16,
        "content": "# ===================================================================\n#\n#   Script: Object_Scene\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Object_Scene extends gs.Object_Base\n  #  @objectCodecBlackList = [\"parent\", \"subObjects\", \"preparing\", \"behavior\", \"interpreter\", \"events\", \"sceneData\",\n  #  \"characterContainer\", \"pictureContainer\", \"textContainer\", \"videoContainer\", \"messageAreas\", \"hotspotContainer\", \"commonEventContainer\",\n  #  \"pictures\", \"texts\", \"videos\", \"messageAreas\", \"hotspots\", \"commonEvents\", \"layout\", \"layoutNVL\"]\n    \n    @accessors \"visible\", \n        set: (v) -> \n            if v != @visible_\n                @visible_ = v\n                @needsUpdate = yes\n                @fullRefresh()\n            \n        get: -> @visible_ and (!@parent or @parent.visible)\n    \n    ###*\n    * A scene object manages a whole visual novel scene with backgrounds, characters,\n    * messages, etc.\n    *\n    * @module vn\n    * @class Object_Scene\n    * @extends gs.Object_Base\n    * @memberof vn\n    * @constructor\n    ###    \n    constructor: ->\n        super()\n        \n        ###*\n        * Indicates that the scene is still in prepare-state and not ready yet.\n        * @property preparing\n        * @type boolean\n        ###\n        @preparing = yes\n        \n        ###*\n        * The behavior-component for the VN scene specific behavior.\n        * @property behavior\n        * @type gs.Component_GameSceneBehavior\n        ###\n        @behavior = new vn.Component_GameSceneBehavior()\n        \n        ###*\n        * An interpreter to execute the commands of scene.\n        * @property interpreter\n        * @type gs.Component_CommandInterpreter\n        ###\n        @interpreter = new gs.Component_CommandInterpreter()\n        \n        ###*\n        * An event-emitter to emit events.\n        * @property events\n        * @type gs.Component_EventEmitter\n        ###\n        @events = new gs.Component_EventEmitter()\n        \n        ###*\n        * Contains all background objects of the scene.\n        * @property backgroundContainer\n        * @type gs.Object_Container\n        ###\n        @backgroundContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL)\n        \n        ###*\n        * Contains all character objects of the scene.\n        * @property characterContainer\n        * @type gs.Object_Container\n        ###\n        @characterContainer = new gs.Object_Container(gs.ContainerDisposeBehavior.REMOVE)\n        \n        ###*\n        * Contains all picture objects of the scene.\n        * @property pictureContainer\n        * @type gs.Object_Container\n        ###\n        @pictureContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL)\n        \n        ###*\n        * Contains all video objects of the scene.\n        * @property videoContainer\n        * @type gs.Object_Container\n        ###\n        @videoContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL)\n        \n        ###*\n        * Contains all text objects of the scene.\n        * @property textContainer\n        * @type gs.Object_Container\n        ###\n        @textContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL)\n        \n        ###*\n        * Contains all hotspot objects of the scene.\n        * @property hotspotContainer\n        * @type gs.Object_Container\n        ###\n        @hotspotContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL)\n        \n        ###*\n        * Contains all common events which are running parallel/auto to the scene.\n        * @property commonEventContainer\n        * @type gs.Object_Container\n        ###\n        @commonEventContainer = new gs.Object_Container(gs.ContainerDisposeBehavior.NULL)\n        \n        ###*\n        * Contains all viewports which are used to create multi-layered screen effects.\n        * @property viewportContainer\n        * @type gs.Object_Container\n        ###\n        @viewportContainer = new gs.Object_Container(gs.ContainerDisposeBehavior.REMOVE)\n        \n        ###*\n        * Contains all interval timers.\n        * @property timerContainer\n        * @type gs.Object_Container\n        ###\n        @timerContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL)\n        \n        ###*\n        * Contains all message areas of the scene.\n        * @property messageAreaContainer\n        * @type gs.Object_Container\n        ###\n        @messageAreaContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL)\n        \n        @characterContainer.visible = yes\n        \n        ###*\n        * All picture objects as array. That is the same like accessing the <b>subObjects</b> of the\n        * container object.\n        * @property pictures\n        * @type gs.Object_Picture[]\n        * @readOnly\n        ###\n        @pictures = @pictureContainer.subObjects\n        \n        ###*\n        * All video objects as array. That is the same like accessing the <b>subObjects</b> of the\n        * container object.\n        * @property videos\n        * @type gs.Object_Video[]\n        * @readOnly\n        ###\n        @videos = @videoContainer.subObjects\n        \n        ###*\n        * All text objects as array. That is the same like accessing the <b>subObjects</b> of the\n        * container object.\n        * @property texts\n        * @type gs.Object_Text[]\n        * @readOnly\n        ###\n        @texts = @textContainer.subObjects\n        \n        ###*\n        * All character objects as array. That is the same like accessing the <b>subObjects</b> of the\n        * container object.\n        * @property characters\n        * @type gs.Object_Character[]\n        * @readOnly\n        ###\n        @characters = @characterContainer.subObjects\n        \n        ###*\n        * All backgrounds as array. That is the same like accessing the <b>subObjects</b> of the\n        * container object.\n        * @property backgrounds\n        * @type gs.Object_Background[]\n        * @readOnly\n        ###\n        @backgrounds = @backgroundContainer.subObjects\n        \n        ###*\n        * All hotspot objects as array. That is the same like accessing the <b>subObjects</b> of the\n        * container object.\n        * @property hotspots\n        * @type gs.Object_Hotspot[]\n        * @readOnly\n        ###\n        @hotspots = @hotspotContainer.subObjects\n        \n        ###*\n        * All interval timer objects as array. That is the same like accessing the <b>subObjects</b> of the\n        * container object.\n        * @property timers\n        * @type gs.Object_IntervalTimer[]\n        * @readOnly\n        ###\n        @timers = @timerContainer.subObjects\n        \n        ###*\n        * All message areas as array.\n        * @property messageAreas\n        * @type vn.MessageArea[]\n        * @readOnly\n        ###\n        @messageAreas = @messageAreaContainer.subObjects\n    \n        \n        ###*\n        * A timer object used for choices with time-limit.\n        * @property choiceTimer\n        * @type gs.Object_Timer\n        ###\n        @choiceTimer = new gs.Object_Timer()\n        \n        ###*\n        * Indicates if the UI layout is visible.\n        * @property visible\n        * @type boolean\n        ###\n        @visible = yes\n        \n        ###*\n        * @property visible_\n        * @type boolean\n        * @protected\n        ###\n        @visible_ = yes\n        \n        ###*\n        * The game settings.\n        * @property settings\n        * @type Object\n        ###\n        @settings = GameManager.settings\n        \n        ###*\n        * Temporary settings like skip, etc.\n        * @property tempSettings\n        * @type Object\n        ###\n        @tempSettings = GameManager.settings\n        \n        ###*\n        * Contains all data necessary to construct the scene.\n        * @property sceneData\n        * @type Object\n        ###\n        @sceneData = GameManager.sceneData\n        \n        @addObject(@backgroundContainer)\n        @addObject(@characterContainer)\n        @addObject(@pictureContainer)\n        @addObject(@textContainer)\n        @addObject(@videoContainer)\n        @addObject(@hotspotContainer)\n        @addObject(@viewportContainer)\n        @addObject(@commonEventContainer)\n        @addObject(@timerContainer)\n        @addObject(@choiceTimer)\n        @addObject(@messageAreaContainer)\n        \n        \n        @addComponent(new gs.Component_InputHandler())\n        @addComponent(@behavior)\n        @addComponent(@interpreter)\n        \n        \nvn.Object_Scene = Object_Scene",
        "parentId": "A05E7029K45DBA459BSADF4EEC07A526241A",
        "folder": false,
        "compiledContent": "var Object_Scene,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nObject_Scene = (function(superClass) {\n  extend(Object_Scene, superClass);\n\n  Object_Scene.accessors(\"visible\", {\n    set: function(v) {\n      if (v !== this.visible_) {\n        this.visible_ = v;\n        this.needsUpdate = true;\n        return this.fullRefresh();\n      }\n    },\n    get: function() {\n      return this.visible_ && (!this.parent || this.parent.visible);\n    }\n  });\n\n\n  /**\n  * A scene object manages a whole visual novel scene with backgrounds, characters,\n  * messages, etc.\n  *\n  * @module vn\n  * @class Object_Scene\n  * @extends gs.Object_Base\n  * @memberof vn\n  * @constructor\n   */\n\n  function Object_Scene() {\n    Object_Scene.__super__.constructor.call(this);\n\n    /**\n    * Indicates that the scene is still in prepare-state and not ready yet.\n    * @property preparing\n    * @type boolean\n     */\n    this.preparing = true;\n\n    /**\n    * The behavior-component for the VN scene specific behavior.\n    * @property behavior\n    * @type gs.Component_GameSceneBehavior\n     */\n    this.behavior = new vn.Component_GameSceneBehavior();\n\n    /**\n    * An interpreter to execute the commands of scene.\n    * @property interpreter\n    * @type gs.Component_CommandInterpreter\n     */\n    this.interpreter = new gs.Component_CommandInterpreter();\n\n    /**\n    * An event-emitter to emit events.\n    * @property events\n    * @type gs.Component_EventEmitter\n     */\n    this.events = new gs.Component_EventEmitter();\n\n    /**\n    * Contains all background objects of the scene.\n    * @property backgroundContainer\n    * @type gs.Object_Container\n     */\n    this.backgroundContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL);\n\n    /**\n    * Contains all character objects of the scene.\n    * @property characterContainer\n    * @type gs.Object_Container\n     */\n    this.characterContainer = new gs.Object_Container(gs.ContainerDisposeBehavior.REMOVE);\n\n    /**\n    * Contains all picture objects of the scene.\n    * @property pictureContainer\n    * @type gs.Object_Container\n     */\n    this.pictureContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL);\n\n    /**\n    * Contains all video objects of the scene.\n    * @property videoContainer\n    * @type gs.Object_Container\n     */\n    this.videoContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL);\n\n    /**\n    * Contains all text objects of the scene.\n    * @property textContainer\n    * @type gs.Object_Container\n     */\n    this.textContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL);\n\n    /**\n    * Contains all hotspot objects of the scene.\n    * @property hotspotContainer\n    * @type gs.Object_Container\n     */\n    this.hotspotContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL);\n\n    /**\n    * Contains all common events which are running parallel/auto to the scene.\n    * @property commonEventContainer\n    * @type gs.Object_Container\n     */\n    this.commonEventContainer = new gs.Object_Container(gs.ContainerDisposeBehavior.NULL);\n\n    /**\n    * Contains all viewports which are used to create multi-layered screen effects.\n    * @property viewportContainer\n    * @type gs.Object_Container\n     */\n    this.viewportContainer = new gs.Object_Container(gs.ContainerDisposeBehavior.REMOVE);\n\n    /**\n    * Contains all interval timers.\n    * @property timerContainer\n    * @type gs.Object_Container\n     */\n    this.timerContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL);\n\n    /**\n    * Contains all message areas of the scene.\n    * @property messageAreaContainer\n    * @type gs.Object_Container\n     */\n    this.messageAreaContainer = new gs.Object_DomainContainer(gs.ContainerDisposeBehavior.NULL);\n    this.characterContainer.visible = true;\n\n    /**\n    * All picture objects as array. That is the same like accessing the <b>subObjects</b> of the\n    * container object.\n    * @property pictures\n    * @type gs.Object_Picture[]\n    * @readOnly\n     */\n    this.pictures = this.pictureContainer.subObjects;\n\n    /**\n    * All video objects as array. That is the same like accessing the <b>subObjects</b> of the\n    * container object.\n    * @property videos\n    * @type gs.Object_Video[]\n    * @readOnly\n     */\n    this.videos = this.videoContainer.subObjects;\n\n    /**\n    * All text objects as array. That is the same like accessing the <b>subObjects</b> of the\n    * container object.\n    * @property texts\n    * @type gs.Object_Text[]\n    * @readOnly\n     */\n    this.texts = this.textContainer.subObjects;\n\n    /**\n    * All character objects as array. That is the same like accessing the <b>subObjects</b> of the\n    * container object.\n    * @property characters\n    * @type gs.Object_Character[]\n    * @readOnly\n     */\n    this.characters = this.characterContainer.subObjects;\n\n    /**\n    * All backgrounds as array. That is the same like accessing the <b>subObjects</b> of the\n    * container object.\n    * @property backgrounds\n    * @type gs.Object_Background[]\n    * @readOnly\n     */\n    this.backgrounds = this.backgroundContainer.subObjects;\n\n    /**\n    * All hotspot objects as array. That is the same like accessing the <b>subObjects</b> of the\n    * container object.\n    * @property hotspots\n    * @type gs.Object_Hotspot[]\n    * @readOnly\n     */\n    this.hotspots = this.hotspotContainer.subObjects;\n\n    /**\n    * All interval timer objects as array. That is the same like accessing the <b>subObjects</b> of the\n    * container object.\n    * @property timers\n    * @type gs.Object_IntervalTimer[]\n    * @readOnly\n     */\n    this.timers = this.timerContainer.subObjects;\n\n    /**\n    * All message areas as array.\n    * @property messageAreas\n    * @type vn.MessageArea[]\n    * @readOnly\n     */\n    this.messageAreas = this.messageAreaContainer.subObjects;\n\n    /**\n    * A timer object used for choices with time-limit.\n    * @property choiceTimer\n    * @type gs.Object_Timer\n     */\n    this.choiceTimer = new gs.Object_Timer();\n\n    /**\n    * Indicates if the UI layout is visible.\n    * @property visible\n    * @type boolean\n     */\n    this.visible = true;\n\n    /**\n    * @property visible_\n    * @type boolean\n    * @protected\n     */\n    this.visible_ = true;\n\n    /**\n    * The game settings.\n    * @property settings\n    * @type Object\n     */\n    this.settings = GameManager.settings;\n\n    /**\n    * Temporary settings like skip, etc.\n    * @property tempSettings\n    * @type Object\n     */\n    this.tempSettings = GameManager.settings;\n\n    /**\n    * Contains all data necessary to construct the scene.\n    * @property sceneData\n    * @type Object\n     */\n    this.sceneData = GameManager.sceneData;\n    this.addObject(this.backgroundContainer);\n    this.addObject(this.characterContainer);\n    this.addObject(this.pictureContainer);\n    this.addObject(this.textContainer);\n    this.addObject(this.videoContainer);\n    this.addObject(this.hotspotContainer);\n    this.addObject(this.viewportContainer);\n    this.addObject(this.commonEventContainer);\n    this.addObject(this.timerContainer);\n    this.addObject(this.choiceTimer);\n    this.addObject(this.messageAreaContainer);\n    this.addComponent(new gs.Component_InputHandler());\n    this.addComponent(this.behavior);\n    this.addComponent(this.interpreter);\n  }\n\n  return Object_Scene;\n\n})(gs.Object_Base);\n\nvn.Object_Scene = Object_Scene;\n\n//# sourceMappingURL=data:application/json;base64,\n//# sourceURL=Object_Scene_151.js"
    },
    "summary": [
        "name",
        "type",
        "order"
    ]
}