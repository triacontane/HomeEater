{"uid":"48904FD4K39C4A4306S84DCE13DB143B0A56","isLoaded":true,"lastModificationTime":0,"items":{"name":"Object_Video","type":"game_script","order":4,"content":"# ===================================================================\n#\n#   Script: Object_Video\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Object_Video extends gs.Object_Visual\n    @objectCodecBlackList = [\"parent\"]\n    \n    ###*\n    * A game object used for custom texts in a scene.\n    *\n    * @module gs\n    * @class Object_Video\n    * @extends gs.Object_Visual\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: (data) ->\n        super\n        \n        ###*\n        * The object's source rectangle. It controls which part of the object's image is used\n        * for visual presentation.\n        * @property srcRect\n        * @type gs.Rect\n        ###\n        @srcRect = new Rect()\n        \n        ###*\n        * The object's mask to execute masking-effects on it.\n        * @property mask\n        * @type gs.Mask\n        ###\n        @mask = new gs.Mask()\n        \n        ###*\n        * Indicates if the object's visual presentation should be mirrored horizontally.\n        * @property mirror\n        * @type boolean\n        ###\n        @mirror = false\n        \n        ###*\n        * The domain the object belongs to.\n        * @property domain\n        * @type string\n        ###\n        @domain = \"com.degica.vnm.default\"\n        \n        ###*\n        * The name of the video resource used for the visual presentation.\n        * @property video\n        * @type string\n        ###\n        @video = \"\"\n        \n        ###*\n        * Indicates if the video should be looped. The default is <b>false</b>\n        * @property loop\n        * @type boolean\n        ###\n        @loop = no\n        \n        ###*\n        * The rotation-angle of the picture in degrees. The rotation center depends on the\n        * anchor-point.\n        * @property angle\n        * @type number\n        ###\n        @angle = 0\n        \n        ###*\n        * The color tone of the object used for the visual presentation.\n        * @property tone\n        * @type gs.Tone\n        ###\n        @tone = new Tone(0, 0, 0, 0)\n        \n        ###*\n        * The color of the object used for the visual presentation.\n        * @property color\n        * @type gs.Color\n        ###\n        @color = new Color(255, 255, 255, 0)\n\n        ###*\n        * The object's animator-component to execute different kind of animations like move, rotate, etc. on it.\n        * @property animator\n        * @type vn.Component_Animator\n        ###\n        @animator = new gs.Component_Animator()\n        \n        ###*\n        * The object's visual-component to display the game object on screen.\n        * @property visual\n        * @type gs.Component_Sprite\n        ###\n        @visual = new gs.Component_Sprite()\n        \n        @addComponent(@visual)\n        @addComponent(@animator)\n        @componentsFromDataBundle(data)\n        @update()\n     \n    ###*\n    * Serializes the object into a data-bundle.\n    *\n    * @method toDataBundle\n    * @return {Object} The data-bundle.\n    ###     \n    toDataBundle: ->\n        components = @componentsToDataBundle(gs.Component_Animation)\n        \n        result = {\n            components: components,\n            visible: @visible,\n            dstRect: @dstRect,\n            srcRect: @srcRect,\n            opacity: @opacity,\n            origin: @origin,\n            zIndex: @zIndex,\n            mask: @mask.toDataBundle(),\n            motionBlur: @motionBlur,\n            zoom: @zoom,\n            angle: @angle,\n            anchor: @anchor,\n            offset: @offset,\n            mirror: @mirror,\n            video: @video,\n            loop: @loop\n        }\n\n        return result\n        \ngs.Object_Video = Object_Video","parentId":"A05E7029K45DBA459BSADF4EEC07A526241A","folder":false,"compiledContent":"var Object_Video,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nObject_Video = (function(superClass) {\n  extend(Object_Video, superClass);\n\n  Object_Video.objectCodecBlackList = [\"parent\"];\n\n\n  /**\n  * A game object used for custom texts in a scene.\n  *\n  * @module gs\n  * @class Object_Video\n  * @extends gs.Object_Visual\n  * @memberof gs\n  * @constructor\n   */\n\n  function Object_Video(data) {\n    Object_Video.__super__.constructor.apply(this, arguments);\n\n    /**\n    * The object's source rectangle. It controls which part of the object's image is used\n    * for visual presentation.\n    * @property srcRect\n    * @type gs.Rect\n     */\n    this.srcRect = new Rect();\n\n    /**\n    * The object's mask to execute masking-effects on it.\n    * @property mask\n    * @type gs.Mask\n     */\n    this.mask = new gs.Mask();\n\n    /**\n    * Indicates if the object's visual presentation should be mirrored horizontally.\n    * @property mirror\n    * @type boolean\n     */\n    this.mirror = false;\n\n    /**\n    * The domain the object belongs to.\n    * @property domain\n    * @type string\n     */\n    this.domain = \"com.degica.vnm.default\";\n\n    /**\n    * The name of the video resource used for the visual presentation.\n    * @property video\n    * @type string\n     */\n    this.video = \"\";\n\n    /**\n    * Indicates if the video should be looped. The default is <b>false</b>\n    * @property loop\n    * @type boolean\n     */\n    this.loop = false;\n\n    /**\n    * The rotation-angle of the picture in degrees. The rotation center depends on the\n    * anchor-point.\n    * @property angle\n    * @type number\n     */\n    this.angle = 0;\n\n    /**\n    * The color tone of the object used for the visual presentation.\n    * @property tone\n    * @type gs.Tone\n     */\n    this.tone = new Tone(0, 0, 0, 0);\n\n    /**\n    * The color of the object used for the visual presentation.\n    * @property color\n    * @type gs.Color\n     */\n    this.color = new Color(255, 255, 255, 0);\n\n    /**\n    * The object's animator-component to execute different kind of animations like move, rotate, etc. on it.\n    * @property animator\n    * @type vn.Component_Animator\n     */\n    this.animator = new gs.Component_Animator();\n\n    /**\n    * The object's visual-component to display the game object on screen.\n    * @property visual\n    * @type gs.Component_Sprite\n     */\n    this.visual = new gs.Component_Sprite();\n    this.addComponent(this.visual);\n    this.addComponent(this.animator);\n    this.componentsFromDataBundle(data);\n    this.update();\n  }\n\n\n  /**\n  * Serializes the object into a data-bundle.\n  *\n  * @method toDataBundle\n  * @return {Object} The data-bundle.\n   */\n\n  Object_Video.prototype.toDataBundle = function() {\n    var components, result;\n    components = this.componentsToDataBundle(gs.Component_Animation);\n    result = {\n      components: components,\n      visible: this.visible,\n      dstRect: this.dstRect,\n      srcRect: this.srcRect,\n      opacity: this.opacity,\n      origin: this.origin,\n      zIndex: this.zIndex,\n      mask: this.mask.toDataBundle(),\n      motionBlur: this.motionBlur,\n      zoom: this.zoom,\n      angle: this.angle,\n      anchor: this.anchor,\n      offset: this.offset,\n      mirror: this.mirror,\n      video: this.video,\n      loop: this.loop\n    };\n    return result;\n  };\n\n  return Object_Video;\n\n})(gs.Object_Visual);\n\ngs.Object_Video = Object_Video;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLElBQUEsWUFBQTtFQUFBOzs7QUFBTTs7O0VBQ0YsWUFBQyxDQUFBLG9CQUFELEdBQXdCLENBQUMsUUFBRDs7O0FBRXhCOzs7Ozs7Ozs7O0VBU2Esc0JBQUMsSUFBRDtJQUNULCtDQUFBLFNBQUE7O0FBRUE7Ozs7OztJQU1BLElBQUMsQ0FBQSxPQUFELEdBQWUsSUFBQSxJQUFBLENBQUE7O0FBRWY7Ozs7O0lBS0EsSUFBQyxDQUFBLElBQUQsR0FBWSxJQUFBLEVBQUUsQ0FBQyxJQUFILENBQUE7O0FBRVo7Ozs7O0lBS0EsSUFBQyxDQUFBLE1BQUQsR0FBVTs7QUFFVjs7Ozs7SUFLQSxJQUFDLENBQUEsTUFBRCxHQUFVOztBQUVWOzs7OztJQUtBLElBQUMsQ0FBQSxLQUFELEdBQVM7O0FBRVQ7Ozs7O0lBS0EsSUFBQyxDQUFBLElBQUQsR0FBUTs7QUFFUjs7Ozs7O0lBTUEsSUFBQyxDQUFBLEtBQUQsR0FBUzs7QUFFVDs7Ozs7SUFLQSxJQUFDLENBQUEsSUFBRCxHQUFZLElBQUEsSUFBQSxDQUFLLENBQUwsRUFBUSxDQUFSLEVBQVcsQ0FBWCxFQUFjLENBQWQ7O0FBRVo7Ozs7O0lBS0EsSUFBQyxDQUFBLEtBQUQsR0FBYSxJQUFBLEtBQUEsQ0FBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQixFQUFxQixDQUFyQjs7QUFFYjs7Ozs7SUFLQSxJQUFDLENBQUEsUUFBRCxHQUFnQixJQUFBLEVBQUUsQ0FBQyxrQkFBSCxDQUFBOztBQUVoQjs7Ozs7SUFLQSxJQUFDLENBQUEsTUFBRCxHQUFjLElBQUEsRUFBRSxDQUFDLGdCQUFILENBQUE7SUFFZCxJQUFDLENBQUEsWUFBRCxDQUFjLElBQUMsQ0FBQSxNQUFmO0lBQ0EsSUFBQyxDQUFBLFlBQUQsQ0FBYyxJQUFDLENBQUEsUUFBZjtJQUNBLElBQUMsQ0FBQSx3QkFBRCxDQUEwQixJQUExQjtJQUNBLElBQUMsQ0FBQSxNQUFELENBQUE7RUFyRlM7OztBQXVGYjs7Ozs7Ozt5QkFNQSxZQUFBLEdBQWMsU0FBQTtBQUNWLFFBQUE7SUFBQSxVQUFBLEdBQWEsSUFBQyxDQUFBLHNCQUFELENBQXdCLEVBQUUsQ0FBQyxtQkFBM0I7SUFFYixNQUFBLEdBQVM7TUFDTCxVQUFBLEVBQVksVUFEUDtNQUVMLE9BQUEsRUFBUyxJQUFDLENBQUEsT0FGTDtNQUdMLE9BQUEsRUFBUyxJQUFDLENBQUEsT0FITDtNQUlMLE9BQUEsRUFBUyxJQUFDLENBQUEsT0FKTDtNQUtMLE9BQUEsRUFBUyxJQUFDLENBQUEsT0FMTDtNQU1MLE1BQUEsRUFBUSxJQUFDLENBQUEsTUFOSjtNQU9MLE1BQUEsRUFBUSxJQUFDLENBQUEsTUFQSjtNQVFMLElBQUEsRUFBTSxJQUFDLENBQUEsSUFBSSxDQUFDLFlBQU4sQ0FBQSxDQVJEO01BU0wsVUFBQSxFQUFZLElBQUMsQ0FBQSxVQVRSO01BVUwsSUFBQSxFQUFNLElBQUMsQ0FBQSxJQVZGO01BV0wsS0FBQSxFQUFPLElBQUMsQ0FBQSxLQVhIO01BWUwsTUFBQSxFQUFRLElBQUMsQ0FBQSxNQVpKO01BYUwsTUFBQSxFQUFRLElBQUMsQ0FBQSxNQWJKO01BY0wsTUFBQSxFQUFRLElBQUMsQ0FBQSxNQWRKO01BZUwsS0FBQSxFQUFPLElBQUMsQ0FBQSxLQWZIO01BZ0JMLElBQUEsRUFBTSxJQUFDLENBQUEsSUFoQkY7O0FBbUJULFdBQU87RUF0Qkc7Ozs7R0F6R1MsRUFBRSxDQUFDOztBQWlJOUIsRUFBRSxDQUFDLFlBQUgsR0FBa0IiLCJzb3VyY2VzQ29udGVudCI6WyIjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiNcbiMgICBTY3JpcHQ6IE9iamVjdF9WaWRlb1xuI1xuIyAgICQkQ09QWVJJR0hUJCRcbiNcbiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuY2xhc3MgT2JqZWN0X1ZpZGVvIGV4dGVuZHMgZ3MuT2JqZWN0X1Zpc3VhbFxuICAgIEBvYmplY3RDb2RlY0JsYWNrTGlzdCA9IFtcInBhcmVudFwiXVxuICAgIFxuICAgICMjIypcbiAgICAqIEEgZ2FtZSBvYmplY3QgdXNlZCBmb3IgY3VzdG9tIHRleHRzIGluIGEgc2NlbmUuXG4gICAgKlxuICAgICogQG1vZHVsZSBnc1xuICAgICogQGNsYXNzIE9iamVjdF9WaWRlb1xuICAgICogQGV4dGVuZHMgZ3MuT2JqZWN0X1Zpc3VhbFxuICAgICogQG1lbWJlcm9mIGdzXG4gICAgKiBAY29uc3RydWN0b3JcbiAgICAjIyNcbiAgICBjb25zdHJ1Y3RvcjogKGRhdGEpIC0+XG4gICAgICAgIHN1cGVyXG4gICAgICAgIFxuICAgICAgICAjIyMqXG4gICAgICAgICogVGhlIG9iamVjdCdzIHNvdXJjZSByZWN0YW5nbGUuIEl0IGNvbnRyb2xzIHdoaWNoIHBhcnQgb2YgdGhlIG9iamVjdCdzIGltYWdlIGlzIHVzZWRcbiAgICAgICAgKiBmb3IgdmlzdWFsIHByZXNlbnRhdGlvbi5cbiAgICAgICAgKiBAcHJvcGVydHkgc3JjUmVjdFxuICAgICAgICAqIEB0eXBlIGdzLlJlY3RcbiAgICAgICAgIyMjXG4gICAgICAgIEBzcmNSZWN0ID0gbmV3IFJlY3QoKVxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRoZSBvYmplY3QncyBtYXNrIHRvIGV4ZWN1dGUgbWFza2luZy1lZmZlY3RzIG9uIGl0LlxuICAgICAgICAqIEBwcm9wZXJ0eSBtYXNrXG4gICAgICAgICogQHR5cGUgZ3MuTWFza1xuICAgICAgICAjIyNcbiAgICAgICAgQG1hc2sgPSBuZXcgZ3MuTWFzaygpXG4gICAgICAgIFxuICAgICAgICAjIyMqXG4gICAgICAgICogSW5kaWNhdGVzIGlmIHRoZSBvYmplY3QncyB2aXN1YWwgcHJlc2VudGF0aW9uIHNob3VsZCBiZSBtaXJyb3JlZCBob3Jpem9udGFsbHkuXG4gICAgICAgICogQHByb3BlcnR5IG1pcnJvclxuICAgICAgICAqIEB0eXBlIGJvb2xlYW5cbiAgICAgICAgIyMjXG4gICAgICAgIEBtaXJyb3IgPSBmYWxzZVxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRoZSBkb21haW4gdGhlIG9iamVjdCBiZWxvbmdzIHRvLlxuICAgICAgICAqIEBwcm9wZXJ0eSBkb21haW5cbiAgICAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgICAgIyMjXG4gICAgICAgIEBkb21haW4gPSBcImNvbS5kZWdpY2Eudm5tLmRlZmF1bHRcIlxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRoZSBuYW1lIG9mIHRoZSB2aWRlbyByZXNvdXJjZSB1c2VkIGZvciB0aGUgdmlzdWFsIHByZXNlbnRhdGlvbi5cbiAgICAgICAgKiBAcHJvcGVydHkgdmlkZW9cbiAgICAgICAgKiBAdHlwZSBzdHJpbmdcbiAgICAgICAgIyMjXG4gICAgICAgIEB2aWRlbyA9IFwiXCJcbiAgICAgICAgXG4gICAgICAgICMjIypcbiAgICAgICAgKiBJbmRpY2F0ZXMgaWYgdGhlIHZpZGVvIHNob3VsZCBiZSBsb29wZWQuIFRoZSBkZWZhdWx0IGlzIDxiPmZhbHNlPC9iPlxuICAgICAgICAqIEBwcm9wZXJ0eSBsb29wXG4gICAgICAgICogQHR5cGUgYm9vbGVhblxuICAgICAgICAjIyNcbiAgICAgICAgQGxvb3AgPSBub1xuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRoZSByb3RhdGlvbi1hbmdsZSBvZiB0aGUgcGljdHVyZSBpbiBkZWdyZWVzLiBUaGUgcm90YXRpb24gY2VudGVyIGRlcGVuZHMgb24gdGhlXG4gICAgICAgICogYW5jaG9yLXBvaW50LlxuICAgICAgICAqIEBwcm9wZXJ0eSBhbmdsZVxuICAgICAgICAqIEB0eXBlIG51bWJlclxuICAgICAgICAjIyNcbiAgICAgICAgQGFuZ2xlID0gMFxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRoZSBjb2xvciB0b25lIG9mIHRoZSBvYmplY3QgdXNlZCBmb3IgdGhlIHZpc3VhbCBwcmVzZW50YXRpb24uXG4gICAgICAgICogQHByb3BlcnR5IHRvbmVcbiAgICAgICAgKiBAdHlwZSBncy5Ub25lXG4gICAgICAgICMjI1xuICAgICAgICBAdG9uZSA9IG5ldyBUb25lKDAsIDAsIDAsIDApXG4gICAgICAgIFxuICAgICAgICAjIyMqXG4gICAgICAgICogVGhlIGNvbG9yIG9mIHRoZSBvYmplY3QgdXNlZCBmb3IgdGhlIHZpc3VhbCBwcmVzZW50YXRpb24uXG4gICAgICAgICogQHByb3BlcnR5IGNvbG9yXG4gICAgICAgICogQHR5cGUgZ3MuQ29sb3JcbiAgICAgICAgIyMjXG4gICAgICAgIEBjb2xvciA9IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1LCAwKVxuXG4gICAgICAgICMjIypcbiAgICAgICAgKiBUaGUgb2JqZWN0J3MgYW5pbWF0b3ItY29tcG9uZW50IHRvIGV4ZWN1dGUgZGlmZmVyZW50IGtpbmQgb2YgYW5pbWF0aW9ucyBsaWtlIG1vdmUsIHJvdGF0ZSwgZXRjLiBvbiBpdC5cbiAgICAgICAgKiBAcHJvcGVydHkgYW5pbWF0b3JcbiAgICAgICAgKiBAdHlwZSB2bi5Db21wb25lbnRfQW5pbWF0b3JcbiAgICAgICAgIyMjXG4gICAgICAgIEBhbmltYXRvciA9IG5ldyBncy5Db21wb25lbnRfQW5pbWF0b3IoKVxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRoZSBvYmplY3QncyB2aXN1YWwtY29tcG9uZW50IHRvIGRpc3BsYXkgdGhlIGdhbWUgb2JqZWN0IG9uIHNjcmVlbi5cbiAgICAgICAgKiBAcHJvcGVydHkgdmlzdWFsXG4gICAgICAgICogQHR5cGUgZ3MuQ29tcG9uZW50X1Nwcml0ZVxuICAgICAgICAjIyNcbiAgICAgICAgQHZpc3VhbCA9IG5ldyBncy5Db21wb25lbnRfU3ByaXRlKClcbiAgICAgICAgXG4gICAgICAgIEBhZGRDb21wb25lbnQoQHZpc3VhbClcbiAgICAgICAgQGFkZENvbXBvbmVudChAYW5pbWF0b3IpXG4gICAgICAgIEBjb21wb25lbnRzRnJvbURhdGFCdW5kbGUoZGF0YSlcbiAgICAgICAgQHVwZGF0ZSgpXG4gICAgIFxuICAgICMjIypcbiAgICAqIFNlcmlhbGl6ZXMgdGhlIG9iamVjdCBpbnRvIGEgZGF0YS1idW5kbGUuXG4gICAgKlxuICAgICogQG1ldGhvZCB0b0RhdGFCdW5kbGVcbiAgICAqIEByZXR1cm4ge09iamVjdH0gVGhlIGRhdGEtYnVuZGxlLlxuICAgICMjIyAgICAgXG4gICAgdG9EYXRhQnVuZGxlOiAtPlxuICAgICAgICBjb21wb25lbnRzID0gQGNvbXBvbmVudHNUb0RhdGFCdW5kbGUoZ3MuQ29tcG9uZW50X0FuaW1hdGlvbilcbiAgICAgICAgXG4gICAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgICAgIGNvbXBvbmVudHM6IGNvbXBvbmVudHMsXG4gICAgICAgICAgICB2aXNpYmxlOiBAdmlzaWJsZSxcbiAgICAgICAgICAgIGRzdFJlY3Q6IEBkc3RSZWN0LFxuICAgICAgICAgICAgc3JjUmVjdDogQHNyY1JlY3QsXG4gICAgICAgICAgICBvcGFjaXR5OiBAb3BhY2l0eSxcbiAgICAgICAgICAgIG9yaWdpbjogQG9yaWdpbixcbiAgICAgICAgICAgIHpJbmRleDogQHpJbmRleCxcbiAgICAgICAgICAgIG1hc2s6IEBtYXNrLnRvRGF0YUJ1bmRsZSgpLFxuICAgICAgICAgICAgbW90aW9uQmx1cjogQG1vdGlvbkJsdXIsXG4gICAgICAgICAgICB6b29tOiBAem9vbSxcbiAgICAgICAgICAgIGFuZ2xlOiBAYW5nbGUsXG4gICAgICAgICAgICBhbmNob3I6IEBhbmNob3IsXG4gICAgICAgICAgICBvZmZzZXQ6IEBvZmZzZXQsXG4gICAgICAgICAgICBtaXJyb3I6IEBtaXJyb3IsXG4gICAgICAgICAgICB2aWRlbzogQHZpZGVvLFxuICAgICAgICAgICAgbG9vcDogQGxvb3BcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZXN1bHRcbiAgICAgICAgXG5ncy5PYmplY3RfVmlkZW8gPSBPYmplY3RfVmlkZW8iXX0=\n//# sourceURL=Object_Video_57.js"},"summary":["name","type","order"]}