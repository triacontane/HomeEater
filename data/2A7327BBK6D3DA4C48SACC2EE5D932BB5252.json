{"uid":"2A7327BBK6D3DA4C48SACC2EE5D932BB5252","isLoaded":true,"lastModificationTime":0,"items":{"name":"Object_Hotspot","type":"game_script","order":6,"content":"# ===================================================================\n#\n#   Script: Object_Hotspot\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Object_Hotspot extends gs.Object_Visual\n    @objectCodecBlackList = [\"parent\"]\n    \n    ###*\n    * A hotspot object to define an area on the screen which can respond\n    * to user-actions like mouse/touch actions. A hotspot can have multiple\n    * images for different states like hovered, selected, etc.\n    *\n    * @module gs\n    * @class Object_Hotspot\n    * @extends gs.Object_Visual\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: () ->\n        super\n        \n        ###*\n        * The object's source rectangle. It controls which part of the object's image is used\n        * for visual presentation.\n        * @property srcRect\n        * @type gs.Rect\n        ###\n        @srcRect = new Rect()\n        \n        ###*\n        * The object's mask to execute masking-effects on it.\n        * @property mask\n        * @type gs.Mask\n        ###\n        @mask = new gs.Mask()\n        \n        ###*\n        * Indicates if the object's visual presentation should be mirrored horizontally.\n        * @property mirror\n        * @type boolean\n        ###\n        @mirror = false\n        \n        ###*\n        * The domain the object belongs to.\n        * @property domain\n        * @type string\n        ###\n        @domain = \"com.degica.vnm.default\"\n        \n        ###*\n        * The object's image used for visual presentation.\n        * @property image\n        * @type string\n        ###\n        @image = \"\"\n        \n        ###*\n        * The rotation-angle of the picture in degrees. The rotation center depends on the\n        * anchor-point.\n        * @property angle\n        * @type number\n        ###\n        @angle = 0\n        \n        ###*\n        * The color tone of the object used for the visual presentation.\n        * @property tone\n        * @type gs.Tone\n        ###\n        @tone = new Tone(0, 0, 0, 0)\n        \n        ###*\n        * The color of the object used for the visual presentation.\n        * @property color\n        * @type gs.Color\n        ###\n        @color = new Color(255, 255, 255, 0)\n        \n        ###*\n        * Contains different kinds of effects which can be activated for the object.\n        * @property effects\n        * @type Object\n        ###\n        @effects = new gs.EffectCollection()\n        \n        ###*\n        * Indicates if the hotspot is selectable by mouse/touch.\n        * @property selectable\n        * @type boolean\n        ###\n        @selectable = yes\n        \n        ###*\n        * Indicates if the hotspot is enabled. A disabled hotspot will not fire any events/actions.\n        * @property enabled.\n        * @type boolean\n        ###\n        @enabled = yes\n\n        ###*\n        * The object's visual-component to display the game object on screen.\n        * @property visual\n        * @type gs.Component_Sprite\n        ###\n        @visual = new gs.Component_Sprite()\n        \n        ###*\n        * The object's image-handling.\n        * @property imageHandling\n        * @type gs.ImageHandling\n        ###\n        @imageHandling = 0\n        \n        ###*\n        * A behavior-component to hotspot-specific behavior to the object.\n        * @property behavior\n        * @type gs.Component_HotspotBehavior\n        ###\n        @behavior = new gs.Component_HotspotBehavior()\n        @behavior.imageHandling = @imageHandling\n        \n        ###*\n        * The hotspot's target. The target it optional but if set the hotspot follows\n        * the target. For example: A hotspot could be follow moving picture.\n        * @property target\n        * @type gs.Object_Visual\n        ###\n        @target = null\n        \n        ###*\n        * The names of the images for the different states of the hotspot. At least one image\n        * needs to be set. The other ones are optional and used for the following:<br>\n        *\n        * - 0 = Base (Required)\n        * - 1 = Hovered\n        * - 2 = Unselected\n        * - 3 = Selected\n        * - 4 = Selected Hovered\n        * @property images\n        * @type string[]\n        ###\n        @images = []\n        \n        ###*\n        * An event-emitter to emit events.\n        * @property events\n        * @type gs.Component_EventEmitter\n        ###\n        @events = new gs.EventEmitter();\n  \n        @addComponent(@events)\n        @addComponent(@behavior)\n        @addComponent(@visual)\n        \n        \ngs.Object_Hotspot = Object_Hotspot","parentId":"A05E7029K45DBA459BSADF4EEC07A526241A","folder":false,"compiledContent":"var Object_Hotspot,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nObject_Hotspot = (function(superClass) {\n  extend(Object_Hotspot, superClass);\n\n  Object_Hotspot.objectCodecBlackList = [\"parent\"];\n\n\n  /**\n  * A hotspot object to define an area on the screen which can respond\n  * to user-actions like mouse/touch actions. A hotspot can have multiple\n  * images for different states like hovered, selected, etc.\n  *\n  * @module gs\n  * @class Object_Hotspot\n  * @extends gs.Object_Visual\n  * @memberof gs\n  * @constructor\n   */\n\n  function Object_Hotspot() {\n    Object_Hotspot.__super__.constructor.apply(this, arguments);\n\n    /**\n    * The object's source rectangle. It controls which part of the object's image is used\n    * for visual presentation.\n    * @property srcRect\n    * @type gs.Rect\n     */\n    this.srcRect = new Rect();\n\n    /**\n    * The object's mask to execute masking-effects on it.\n    * @property mask\n    * @type gs.Mask\n     */\n    this.mask = new gs.Mask();\n\n    /**\n    * Indicates if the object's visual presentation should be mirrored horizontally.\n    * @property mirror\n    * @type boolean\n     */\n    this.mirror = false;\n\n    /**\n    * The domain the object belongs to.\n    * @property domain\n    * @type string\n     */\n    this.domain = \"com.degica.vnm.default\";\n\n    /**\n    * The object's image used for visual presentation.\n    * @property image\n    * @type string\n     */\n    this.image = \"\";\n\n    /**\n    * The rotation-angle of the picture in degrees. The rotation center depends on the\n    * anchor-point.\n    * @property angle\n    * @type number\n     */\n    this.angle = 0;\n\n    /**\n    * The color tone of the object used for the visual presentation.\n    * @property tone\n    * @type gs.Tone\n     */\n    this.tone = new Tone(0, 0, 0, 0);\n\n    /**\n    * The color of the object used for the visual presentation.\n    * @property color\n    * @type gs.Color\n     */\n    this.color = new Color(255, 255, 255, 0);\n\n    /**\n    * Contains different kinds of effects which can be activated for the object.\n    * @property effects\n    * @type Object\n     */\n    this.effects = new gs.EffectCollection();\n\n    /**\n    * Indicates if the hotspot is selectable by mouse/touch.\n    * @property selectable\n    * @type boolean\n     */\n    this.selectable = true;\n\n    /**\n    * Indicates if the hotspot is enabled. A disabled hotspot will not fire any events/actions.\n    * @property enabled.\n    * @type boolean\n     */\n    this.enabled = true;\n\n    /**\n    * The object's visual-component to display the game object on screen.\n    * @property visual\n    * @type gs.Component_Sprite\n     */\n    this.visual = new gs.Component_Sprite();\n\n    /**\n    * The object's image-handling.\n    * @property imageHandling\n    * @type gs.ImageHandling\n     */\n    this.imageHandling = 0;\n\n    /**\n    * A behavior-component to hotspot-specific behavior to the object.\n    * @property behavior\n    * @type gs.Component_HotspotBehavior\n     */\n    this.behavior = new gs.Component_HotspotBehavior();\n    this.behavior.imageHandling = this.imageHandling;\n\n    /**\n    * The hotspot's target. The target it optional but if set the hotspot follows\n    * the target. For example: A hotspot could be follow moving picture.\n    * @property target\n    * @type gs.Object_Visual\n     */\n    this.target = null;\n\n    /**\n    * The names of the images for the different states of the hotspot. At least one image\n    * needs to be set. The other ones are optional and used for the following:<br>\n    *\n    * - 0 = Base (Required)\n    * - 1 = Hovered\n    * - 2 = Unselected\n    * - 3 = Selected\n    * - 4 = Selected Hovered\n    * @property images\n    * @type string[]\n     */\n    this.images = [];\n\n    /**\n    * An event-emitter to emit events.\n    * @property events\n    * @type gs.Component_EventEmitter\n     */\n    this.events = new gs.EventEmitter();\n    this.addComponent(this.events);\n    this.addComponent(this.behavior);\n    this.addComponent(this.visual);\n  }\n\n  return Object_Hotspot;\n\n})(gs.Object_Visual);\n\ngs.Object_Hotspot = Object_Hotspot;\n\n//# sourceMappingURL=data:application/json;base64,\n//# sourceURL=Object_Hotspot_78.js"},"summary":["name","type","order"]}