{
    "uid": "8530911CK1B19A4C27SB297E24E7EB4B5434",
    "isLoaded": true,
    "lastModificationTime": 0,
    "items": {
        "name": "Component_ImageAnimation",
        "type": "game_script",
        "order": 12,
        "content": "# ===================================================================\n#\n#   Script: Component_ImageAnimation\n#\n#   $$COPYRIGHT$$\n#\n# ===================================================================\nclass Component_ImageAnimation extends gs.Component_Animation\n    ###*\n    * Executes a image-based animation.\n    *\n    * @module gs\n    * @class Component_ImageAnimation\n    * @extends gs.Component_Animation\n    * @memberof gs\n    * @constructor\n    ###\n    constructor: (data) ->\n        super\n        \n        ###*\n        * The images to animate through.\n        * @property images\n        * @type string[]\n        ###\n        @images = data?.images || []\n        \n        ###*\n        * The easing-object used for the animation.\n        * @property easing\n        * @type gs.Easing\n        ###\n        @easing = new gs.Easing(null, data?.easing)\n        \n    ###*\n    * Serializes the image-animation into a data-bundle.\n    *\n    * @method toDataBundle\n    ###\n    toDataBundle: ->\n        easing: @easing,\n        images: @images\n       \n    ###*\n    * Updates the image-animation.\n    *\n    * @method update\n    ### \n    update: ->\n        super\n        if not @easing.isRunning then return\n  \n        @easing.updateValue()\n        @object.image = @images[Math.round(@easing.value)]\n        \n        if not @easing.isRunning\n            @callback?(@object, this)\n    \n    ###*\n    * A simple image animation runs from left to right using the game object's\n    * image-property.\n    *\n    * @method changeImages\n    * @param {Array} images An array of image names.\n    * @param {number} duration The duration in frames.\n    * @param {Object} easingType The easing-type.\n    * @param {function} [callback] An optional callback called if blending is finished. \n    ###         \n    start: (images, duration, easingType, callback) ->\n        @callback = callback\n        @images = images\n        @easing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN]\n        @easing.startValue(0, images.length-1, duration)\n        \ngs.Component_ImageAnimation = Component_ImageAnimation",
        "parentId": "A8E9945CKEE5CA4855SAC81E480CB8098E0E",
        "folder": false,
        "compiledContent": "var Component_ImageAnimation,\n  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n  hasProp = {}.hasOwnProperty;\n\nComponent_ImageAnimation = (function(superClass) {\n  extend(Component_ImageAnimation, superClass);\n\n\n  /**\n  * Executes a image-based animation.\n  *\n  * @module gs\n  * @class Component_ImageAnimation\n  * @extends gs.Component_Animation\n  * @memberof gs\n  * @constructor\n   */\n\n  function Component_ImageAnimation(data) {\n    Component_ImageAnimation.__super__.constructor.apply(this, arguments);\n\n    /**\n    * The images to animate through.\n    * @property images\n    * @type string[]\n     */\n    this.images = (data != null ? data.images : void 0) || [];\n\n    /**\n    * The easing-object used for the animation.\n    * @property easing\n    * @type gs.Easing\n     */\n    this.easing = new gs.Easing(null, data != null ? data.easing : void 0);\n  }\n\n\n  /**\n  * Serializes the image-animation into a data-bundle.\n  *\n  * @method toDataBundle\n   */\n\n  Component_ImageAnimation.prototype.toDataBundle = function() {\n    return {\n      easing: this.easing,\n      images: this.images\n    };\n  };\n\n\n  /**\n  * Updates the image-animation.\n  *\n  * @method update\n   */\n\n  Component_ImageAnimation.prototype.update = function() {\n    Component_ImageAnimation.__super__.update.apply(this, arguments);\n    if (!this.easing.isRunning) {\n      return;\n    }\n    this.easing.updateValue();\n    this.object.image = this.images[Math.round(this.easing.value)];\n    if (!this.easing.isRunning) {\n      return typeof this.callback === \"function\" ? this.callback(this.object, this) : void 0;\n    }\n  };\n\n\n  /**\n  * A simple image animation runs from left to right using the game object's\n  * image-property.\n  *\n  * @method changeImages\n  * @param {Array} images An array of image names.\n  * @param {number} duration The duration in frames.\n  * @param {Object} easingType The easing-type.\n  * @param {function} [callback] An optional callback called if blending is finished.\n   */\n\n  Component_ImageAnimation.prototype.start = function(images, duration, easingType, callback) {\n    this.callback = callback;\n    this.images = images;\n    this.easing.type = easingType || gs.Easings.EASE_LINEAR[gs.EasingTypes.EASE_IN];\n    return this.easing.startValue(0, images.length - 1, duration);\n  };\n\n  return Component_ImageAnimation;\n\n})(gs.Component_Animation);\n\ngs.Component_ImageAnimation = Component_ImageAnimation;\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLElBQUEsd0JBQUE7RUFBQTs7O0FBQU07Ozs7QUFDRjs7Ozs7Ozs7OztFQVNhLGtDQUFDLElBQUQ7SUFDVCwyREFBQSxTQUFBOztBQUVBOzs7OztJQUtBLElBQUMsQ0FBQSxNQUFELG1CQUFVLElBQUksQ0FBRSxnQkFBTixJQUFnQjs7QUFFMUI7Ozs7O0lBS0EsSUFBQyxDQUFBLE1BQUQsR0FBYyxJQUFBLEVBQUUsQ0FBQyxNQUFILENBQVUsSUFBVixpQkFBZ0IsSUFBSSxDQUFFLGVBQXRCO0VBZkw7OztBQWlCYjs7Ozs7O3FDQUtBLFlBQUEsR0FBYyxTQUFBO1dBQ1Y7TUFBQSxNQUFBLEVBQVEsSUFBQyxDQUFBLE1BQVQ7TUFDQSxNQUFBLEVBQVEsSUFBQyxDQUFBLE1BRFQ7O0VBRFU7OztBQUlkOzs7Ozs7cUNBS0EsTUFBQSxHQUFRLFNBQUE7SUFDSixzREFBQSxTQUFBO0lBQ0EsSUFBRyxDQUFJLElBQUMsQ0FBQSxNQUFNLENBQUMsU0FBZjtBQUE4QixhQUE5Qjs7SUFFQSxJQUFDLENBQUEsTUFBTSxDQUFDLFdBQVIsQ0FBQTtJQUNBLElBQUMsQ0FBQSxNQUFNLENBQUMsS0FBUixHQUFnQixJQUFDLENBQUEsTUFBTyxDQUFBLElBQUksQ0FBQyxLQUFMLENBQVcsSUFBQyxDQUFBLE1BQU0sQ0FBQyxLQUFuQixDQUFBO0lBRXhCLElBQUcsQ0FBSSxJQUFDLENBQUEsTUFBTSxDQUFDLFNBQWY7bURBQ0ksSUFBQyxDQUFBLFNBQVUsSUFBQyxDQUFBLFFBQVEsZUFEeEI7O0VBUEk7OztBQVVSOzs7Ozs7Ozs7OztxQ0FVQSxLQUFBLEdBQU8sU0FBQyxNQUFELEVBQVMsUUFBVCxFQUFtQixVQUFuQixFQUErQixRQUEvQjtJQUNILElBQUMsQ0FBQSxRQUFELEdBQVk7SUFDWixJQUFDLENBQUEsTUFBRCxHQUFVO0lBQ1YsSUFBQyxDQUFBLE1BQU0sQ0FBQyxJQUFSLEdBQWUsVUFBQSxJQUFjLEVBQUUsQ0FBQyxPQUFPLENBQUMsV0FBWSxDQUFBLEVBQUUsQ0FBQyxXQUFXLENBQUMsT0FBZjtXQUNwRCxJQUFDLENBQUEsTUFBTSxDQUFDLFVBQVIsQ0FBbUIsQ0FBbkIsRUFBc0IsTUFBTSxDQUFDLE1BQVAsR0FBYyxDQUFwQyxFQUF1QyxRQUF2QztFQUpHOzs7O0dBN0Q0QixFQUFFLENBQUM7O0FBbUUxQyxFQUFFLENBQUMsd0JBQUgsR0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyIjID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiNcbiMgICBTY3JpcHQ6IENvbXBvbmVudF9JbWFnZUFuaW1hdGlvblxuI1xuIyAgICQkQ09QWVJJR0hUJCRcbiNcbiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuY2xhc3MgQ29tcG9uZW50X0ltYWdlQW5pbWF0aW9uIGV4dGVuZHMgZ3MuQ29tcG9uZW50X0FuaW1hdGlvblxuICAgICMjIypcbiAgICAqIEV4ZWN1dGVzIGEgaW1hZ2UtYmFzZWQgYW5pbWF0aW9uLlxuICAgICpcbiAgICAqIEBtb2R1bGUgZ3NcbiAgICAqIEBjbGFzcyBDb21wb25lbnRfSW1hZ2VBbmltYXRpb25cbiAgICAqIEBleHRlbmRzIGdzLkNvbXBvbmVudF9BbmltYXRpb25cbiAgICAqIEBtZW1iZXJvZiBnc1xuICAgICogQGNvbnN0cnVjdG9yXG4gICAgIyMjXG4gICAgY29uc3RydWN0b3I6IChkYXRhKSAtPlxuICAgICAgICBzdXBlclxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRoZSBpbWFnZXMgdG8gYW5pbWF0ZSB0aHJvdWdoLlxuICAgICAgICAqIEBwcm9wZXJ0eSBpbWFnZXNcbiAgICAgICAgKiBAdHlwZSBzdHJpbmdbXVxuICAgICAgICAjIyNcbiAgICAgICAgQGltYWdlcyA9IGRhdGE/LmltYWdlcyB8fCBbXVxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRoZSBlYXNpbmctb2JqZWN0IHVzZWQgZm9yIHRoZSBhbmltYXRpb24uXG4gICAgICAgICogQHByb3BlcnR5IGVhc2luZ1xuICAgICAgICAqIEB0eXBlIGdzLkVhc2luZ1xuICAgICAgICAjIyNcbiAgICAgICAgQGVhc2luZyA9IG5ldyBncy5FYXNpbmcobnVsbCwgZGF0YT8uZWFzaW5nKVxuICAgICAgICBcbiAgICAjIyMqXG4gICAgKiBTZXJpYWxpemVzIHRoZSBpbWFnZS1hbmltYXRpb24gaW50byBhIGRhdGEtYnVuZGxlLlxuICAgICpcbiAgICAqIEBtZXRob2QgdG9EYXRhQnVuZGxlXG4gICAgIyMjXG4gICAgdG9EYXRhQnVuZGxlOiAtPlxuICAgICAgICBlYXNpbmc6IEBlYXNpbmcsXG4gICAgICAgIGltYWdlczogQGltYWdlc1xuICAgICAgIFxuICAgICMjIypcbiAgICAqIFVwZGF0ZXMgdGhlIGltYWdlLWFuaW1hdGlvbi5cbiAgICAqXG4gICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgICMjIyBcbiAgICB1cGRhdGU6IC0+XG4gICAgICAgIHN1cGVyXG4gICAgICAgIGlmIG5vdCBAZWFzaW5nLmlzUnVubmluZyB0aGVuIHJldHVyblxuICBcbiAgICAgICAgQGVhc2luZy51cGRhdGVWYWx1ZSgpXG4gICAgICAgIEBvYmplY3QuaW1hZ2UgPSBAaW1hZ2VzW01hdGgucm91bmQoQGVhc2luZy52YWx1ZSldXG4gICAgICAgIFxuICAgICAgICBpZiBub3QgQGVhc2luZy5pc1J1bm5pbmdcbiAgICAgICAgICAgIEBjYWxsYmFjaz8oQG9iamVjdCwgdGhpcylcbiAgICBcbiAgICAjIyMqXG4gICAgKiBBIHNpbXBsZSBpbWFnZSBhbmltYXRpb24gcnVucyBmcm9tIGxlZnQgdG8gcmlnaHQgdXNpbmcgdGhlIGdhbWUgb2JqZWN0J3NcbiAgICAqIGltYWdlLXByb3BlcnR5LlxuICAgICpcbiAgICAqIEBtZXRob2QgY2hhbmdlSW1hZ2VzXG4gICAgKiBAcGFyYW0ge0FycmF5fSBpbWFnZXMgQW4gYXJyYXkgb2YgaW1hZ2UgbmFtZXMuXG4gICAgKiBAcGFyYW0ge251bWJlcn0gZHVyYXRpb24gVGhlIGR1cmF0aW9uIGluIGZyYW1lcy5cbiAgICAqIEBwYXJhbSB7T2JqZWN0fSBlYXNpbmdUeXBlIFRoZSBlYXNpbmctdHlwZS5cbiAgICAqIEBwYXJhbSB7ZnVuY3Rpb259IFtjYWxsYmFja10gQW4gb3B0aW9uYWwgY2FsbGJhY2sgY2FsbGVkIGlmIGJsZW5kaW5nIGlzIGZpbmlzaGVkLiBcbiAgICAjIyMgICAgICAgICBcbiAgICBzdGFydDogKGltYWdlcywgZHVyYXRpb24sIGVhc2luZ1R5cGUsIGNhbGxiYWNrKSAtPlxuICAgICAgICBAY2FsbGJhY2sgPSBjYWxsYmFja1xuICAgICAgICBAaW1hZ2VzID0gaW1hZ2VzXG4gICAgICAgIEBlYXNpbmcudHlwZSA9IGVhc2luZ1R5cGUgfHwgZ3MuRWFzaW5ncy5FQVNFX0xJTkVBUltncy5FYXNpbmdUeXBlcy5FQVNFX0lOXVxuICAgICAgICBAZWFzaW5nLnN0YXJ0VmFsdWUoMCwgaW1hZ2VzLmxlbmd0aC0xLCBkdXJhdGlvbilcbiAgICAgICAgXG5ncy5Db21wb25lbnRfSW1hZ2VBbmltYXRpb24gPSBDb21wb25lbnRfSW1hZ2VBbmltYXRpb24iXX0=\n//# sourceURL=Component_ImageAnimation_134.js"
    },
    "summary": [
        "name",
        "type",
        "order"
    ]
}