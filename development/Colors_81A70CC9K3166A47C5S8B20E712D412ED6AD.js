
/**
* Enumeration containing default colors.
*
* @module gs
* @class Colors
* @memberof gs
* @static
* @final
 */
var Colors;

Colors = (function() {
  function Colors() {}

  Colors.initialize = function() {

    /**
    * Transparent color.
    * @property TRANSPARENT
    * @type gs.Color
    * @static
    * @final
     */
    this.TRANSPARENT = new Color(0, 0, 0, 0);

    /**
    * White color.
    * @property WHITE
    * @type gs.Color
    * @static
    * @final
     */
    this.WHITE = new Color(255, 255, 255);

    /**
    * Black color.
    * @property BLACK
    * @type gs.Color
    * @static
    * @final
     */
    this.BLACK = new Color(0, 0, 0);

    /**
    * Color used for rain-particles (Weather-Effect).
    * @property RAIN_PARTICLE
    * @type gs.Color
    * @static
    * @final
     */
    this.RAIN_PARTICLE = new Color(245, 245, 255);

    /**
    * Color used for storm-particles (Weather-Effect).
    * @property STORM_PARTICLE
    * @type gs.Color
    * @static
    * @final
     */
    this.STORM_PARTICLE = this.RAIN_PARTICLE;

    /**
    * Color used for the face of snow-particles (Weather-Effect).
    * @property SNOW_PARTICLE_FACE
    * @type gs.Color
    * @static
    * @final
     */
    this.SNOW_PARTICLE_FACE = new Color(255, 255, 255);

    /**
    * Color used for the edges of snow-particles (Weather-Effect).
    * @property SNOW_PARTICLE_EDGE
    * @type gs.Color
    * @static
    * @final
     */
    return this.SNOW_PARTICLE_EDGE = new Color(255, 255, 255, 0.5);
  };

  return Colors;

})();

Colors.initialize();

window.Colors = Colors;

gs.Colors = Colors;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFRQTs7Ozs7Ozs7O0FBQUEsSUFBQTs7QUFTTTs7O0VBQ0YsTUFBQyxDQUFBLFVBQUQsR0FBYSxTQUFBOztBQUNUOzs7Ozs7O0lBT0EsSUFBQyxDQUFBLFdBQUQsR0FBbUIsSUFBQSxLQUFBLENBQU0sQ0FBTixFQUFTLENBQVQsRUFBWSxDQUFaLEVBQWUsQ0FBZjs7QUFFbkI7Ozs7Ozs7SUFPQSxJQUFDLENBQUEsS0FBRCxHQUFhLElBQUEsS0FBQSxDQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCOztBQUViOzs7Ozs7O0lBT0EsSUFBQyxDQUFBLEtBQUQsR0FBYSxJQUFBLEtBQUEsQ0FBTSxDQUFOLEVBQVMsQ0FBVCxFQUFZLENBQVo7O0FBRWI7Ozs7Ozs7SUFPQSxJQUFDLENBQUEsYUFBRCxHQUFxQixJQUFBLEtBQUEsQ0FBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQjs7QUFFckI7Ozs7Ozs7SUFPQSxJQUFDLENBQUEsY0FBRCxHQUFrQixJQUFDLENBQUE7O0FBRW5COzs7Ozs7O0lBT0EsSUFBQyxDQUFBLGtCQUFELEdBQTBCLElBQUEsS0FBQSxDQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCOztBQUUxQjs7Ozs7OztXQU9BLElBQUMsQ0FBQSxrQkFBRCxHQUEwQixJQUFBLEtBQUEsQ0FBTSxHQUFOLEVBQVcsR0FBWCxFQUFnQixHQUFoQixFQUFxQixHQUFyQjtFQTlEakI7Ozs7OztBQWdFakIsTUFBTSxDQUFDLFVBQVAsQ0FBQTs7QUFDQSxNQUFNLENBQUMsTUFBUCxHQUFnQjs7QUFDaEIsRUFBRSxDQUFDLE1BQUgsR0FBWSIsInNvdXJjZXNDb250ZW50IjpbIiMgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuI1xuIyAgIFNjcmlwdDogQ29sb3JzXG4jXG4jICAgJCRDT1BZUklHSFQkJFxuI1xuIyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5cbiMjIypcbiogRW51bWVyYXRpb24gY29udGFpbmluZyBkZWZhdWx0IGNvbG9ycy5cbipcbiogQG1vZHVsZSBnc1xuKiBAY2xhc3MgQ29sb3JzXG4qIEBtZW1iZXJvZiBnc1xuKiBAc3RhdGljXG4qIEBmaW5hbFxuIyMjXG5jbGFzcyBDb2xvcnNcbiAgICBAaW5pdGlhbGl6ZTogLT5cbiAgICAgICAgIyMjKlxuICAgICAgICAqIFRyYW5zcGFyZW50IGNvbG9yLlxuICAgICAgICAqIEBwcm9wZXJ0eSBUUkFOU1BBUkVOVFxuICAgICAgICAqIEB0eXBlIGdzLkNvbG9yXG4gICAgICAgICogQHN0YXRpY1xuICAgICAgICAqIEBmaW5hbFxuICAgICAgICAjIyNcbiAgICAgICAgQFRSQU5TUEFSRU5UID0gbmV3IENvbG9yKDAsIDAsIDAsIDApXG4gICAgICAgIFxuICAgICAgICAjIyMqXG4gICAgICAgICogV2hpdGUgY29sb3IuXG4gICAgICAgICogQHByb3BlcnR5IFdISVRFXG4gICAgICAgICogQHR5cGUgZ3MuQ29sb3JcbiAgICAgICAgKiBAc3RhdGljXG4gICAgICAgICogQGZpbmFsXG4gICAgICAgICMjI1xuICAgICAgICBAV0hJVEUgPSBuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSlcbiAgICAgICAgXG4gICAgICAgICMjIypcbiAgICAgICAgKiBCbGFjayBjb2xvci5cbiAgICAgICAgKiBAcHJvcGVydHkgQkxBQ0tcbiAgICAgICAgKiBAdHlwZSBncy5Db2xvclxuICAgICAgICAqIEBzdGF0aWNcbiAgICAgICAgKiBAZmluYWxcbiAgICAgICAgIyMjXG4gICAgICAgIEBCTEFDSyA9IG5ldyBDb2xvcigwLCAwLCAwKVxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIENvbG9yIHVzZWQgZm9yIHJhaW4tcGFydGljbGVzIChXZWF0aGVyLUVmZmVjdCkuXG4gICAgICAgICogQHByb3BlcnR5IFJBSU5fUEFSVElDTEVcbiAgICAgICAgKiBAdHlwZSBncy5Db2xvclxuICAgICAgICAqIEBzdGF0aWNcbiAgICAgICAgKiBAZmluYWxcbiAgICAgICAgIyMjXG4gICAgICAgIEBSQUlOX1BBUlRJQ0xFID0gbmV3IENvbG9yKDI0NSwgMjQ1LCAyNTUpXG4gICAgICAgIFxuICAgICAgICAjIyMqXG4gICAgICAgICogQ29sb3IgdXNlZCBmb3Igc3Rvcm0tcGFydGljbGVzIChXZWF0aGVyLUVmZmVjdCkuXG4gICAgICAgICogQHByb3BlcnR5IFNUT1JNX1BBUlRJQ0xFXG4gICAgICAgICogQHR5cGUgZ3MuQ29sb3JcbiAgICAgICAgKiBAc3RhdGljXG4gICAgICAgICogQGZpbmFsXG4gICAgICAgICMjI1xuICAgICAgICBAU1RPUk1fUEFSVElDTEUgPSBAUkFJTl9QQVJUSUNMRVxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIENvbG9yIHVzZWQgZm9yIHRoZSBmYWNlIG9mIHNub3ctcGFydGljbGVzIChXZWF0aGVyLUVmZmVjdCkuXG4gICAgICAgICogQHByb3BlcnR5IFNOT1dfUEFSVElDTEVfRkFDRVxuICAgICAgICAqIEB0eXBlIGdzLkNvbG9yXG4gICAgICAgICogQHN0YXRpY1xuICAgICAgICAqIEBmaW5hbFxuICAgICAgICAjIyNcbiAgICAgICAgQFNOT1dfUEFSVElDTEVfRkFDRSA9IG5ldyBDb2xvcigyNTUsIDI1NSwgMjU1KVxuICAgICAgICBcbiAgICAgICAgIyMjKlxuICAgICAgICAqIENvbG9yIHVzZWQgZm9yIHRoZSBlZGdlcyBvZiBzbm93LXBhcnRpY2xlcyAoV2VhdGhlci1FZmZlY3QpLlxuICAgICAgICAqIEBwcm9wZXJ0eSBTTk9XX1BBUlRJQ0xFX0VER0VcbiAgICAgICAgKiBAdHlwZSBncy5Db2xvclxuICAgICAgICAqIEBzdGF0aWNcbiAgICAgICAgKiBAZmluYWxcbiAgICAgICAgIyMjXG4gICAgICAgIEBTTk9XX1BBUlRJQ0xFX0VER0UgPSBuZXcgQ29sb3IoMjU1LCAyNTUsIDI1NSwgMC41KVxuICBcbkNvbG9ycy5pbml0aWFsaXplKCkgIFxud2luZG93LkNvbG9ycyA9IENvbG9yc1xuZ3MuQ29sb3JzID0gQ29sb3JzIl19
//# sourceURL=Colors_19.js